version: '3.7'

networks:
  web:
services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8090:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    env_file:
      - backend/.env
      - frontend/.env
    networks:
      - web

  frontend:
    build: ./frontend
    labels:
      - "traefik.http.routers.frontend.rule=Host(`braindeadsprite.mooo.com`)"
      - "traefik.http.routers.frontend.entrypoints=web"
    env_file:
      - frontend/.env
    networks:
      - web
    depends_on:
      - backend

  backend:
    build: ./backend
    labels:
      - "traefik.http.routers.backend.rule=Host(`braindeadsprite.mooo.com`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/api,/docs,/redoc"
      - "traefik.http.routers.backend.middlewares=backend-stripprefix"
    env_file:
      - backend/.env
    networks:
      - web
    depends_on:
      - postgres

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: WtlFgKgEfHs48nTs6GxzkmBKX74rr7Tk
      POSTGRES_DB: test_bgrl
      POSTGRES_SERVER: dpg-cq5adm88fa8c73844plg-a.oregon-postgres.render.com
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - web

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - web
    restart: always

volumes:
  pgdata:
