version: '3.7'

networks:
  web:

services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=zeusifeanyi058@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8090:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certs:/certs"
      - "./letsencrypt:/letsencrypt"
    env_file:
      - backend/.env
      - frontend/.env
    labels:
      - "traefik.http.routers.api.rule=Host(`proxy.braindeadsprite.mooo.com`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:devops#HNG11"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
    networks:
      - web

  frontend:
    build: ./frontend
    labels:
      - "traefik.http.routers.frontend.rule=Host(`www.braindeadsprite.mooo.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-www.redirectregex.regex=^https?://(?:www\\.)?braindeadsprite\\.mooo\\.com"
      - "traefik.http.middlewares.redirect-to-www.redirectregex.replacement=https://www.braindeadsprite.mooo.com"
      - "traefik.http.routers.frontend.middlewares=redirect-to-https,redirect-to-www"
    env_file:
      - frontend/.env
    networks:
      - web
    depends_on:
      - backend

  backend:
    build: ./backend
    labels:
      - "traefik.http.routers.backend.rule=Host(`www.braindeadsprite.mooo.com`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/api,/docs,/redoc"
      - "traefik.http.routers.backend.middlewares=backend-stripprefix"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-www.redirectregex.regex=^https?://(?:www\\.)?braindeadsprite\\.mooo\\.com"
      - "traefik.http.middlewares.redirect-to-www.redirectregex.replacement=https://www.braindeadsprite.mooo.com"
      - "traefik.http.routers.backend.middlewares=redirect-to-https,redirect-to-www"
    env_file:
      - backend/.env
    networks:
      - web
    depends_on:
      - postgres

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: WtlFgKgEfHs48nTs6GxzkmBKX74rr7Tk
      POSTGRES_DB: test_bgrl
      POSTGRES_SERVER: dpg-cq5adm88fa8c73844plg-a.oregon-postgres.render.com
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - web

  adminer:
    image: adminer
    labels:
      - "traefik.http.routers.adminer.rule=Host(`db.braindeadsprite.mooo.com`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls=true"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.adminer.middlewares=redirect-to-https"
      - "traefik.http.routers.adminer.tls.certificates[0].certFile=/certs/cert.pem"
      - "traefik.http.routers.adminer.tls.certificates[0].keyFile=/certs/key.pem"
    networks:
      - web
    restart: always

volumes:
  pgdata:
  letsencrypt:
